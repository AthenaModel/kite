<manpage manpage(5) "Mars Man Page Format">

<section SYNOPSIS>

<itemlist>

<section DESCRIPTION>

This man page defines the manpage(5) man page format,
a flavor of "Extended HTML", i.e., an HTML-like format
extended with Tcl macros.  The
basic syntax and capabilities of Extended HTML are defined in the
<xref ehtml(5)> man page.  This man page describes an extension 
to the basic format, as an aid to writing man pages.<p>

The <xref manpage(n)> module translates man pages in
manpage(5) format into HTML.<p>

<section MACROS>

manpage(5) man pages may use any of the following macros, as well
as those defined in the <xref ehtml(5)> man page.
Note that these macros are simply Tcl commands; you can define
your own macros, as described in <xref ehtml(5)>,
and use them in your man pages.<p>

<deflist macros>

<defitem manpage {<lb>manpage <i>nameList description</i><rb>}>

This macro should be the first in the man page, as it expands to the
HTML header and also the "NAME" section of the man page.<p>

The macro has two forms.  In the first form, <i>nameList</i> is just
the name of the man page; <i>description</i> is a short one-line
description of the documented library, file format, or program:<p>

<example>
<lb>manpage manpage(5) "Kite Man Page Format"<rb>
</example>

The second form is used when the man page documents a submodule of a
larger library.  In this case, <i>nameList</i> is a list containing
two entries, the name of the parent man page and the name of this man
page.  For example, the man page for <xref kitedocs(n)>'s
<xref marsmisc(n)> module begins with this macro:<p>

<example>
<lb>manpage {kitedocs(n) kitedoc(n)} "Kite Document Formatter"<rb>
</example>

<defitem /manpage {<lb>/manpage<rb>}>

This macro should be the last in the man page, as it expands to the
HTML footer.  It also adds a timestamp for when the page was
translated.<p>

For example,<p>

<example>
<lb>/manpage<rb>
</example>

<defitem section {<lb>section <i>name</i><rb>}>

Begins a new section.  By convention, man page section names are
displayed in all caps; consequently, <i>name</i> is converted to
all caps when needed.<p>

Every section is included in a table of contents at the beginning of
the generated man page.<p>

The <i>name</i> can be almost anything; however, see
<xref "MAN PAGE SKELETON"> for a list of the sections found in 
most man pages.<p>

<defitem subsection {<lb>subsection <i>name</i><rb>}>

Begins a new subsection under the current <iref section>.
By convention, man page subsection names are displayed in mixed case.
Subsections are included in the table of contents, indented under
their parent section.<p>

The subsection <i>name</i> can be almost anything, but it should be
unique within the man page.<p>


<defitem defitem {<lb>defitem <i tag text><rb>}>

This macro begins an item definition within a <tag deflist>.  An
"item" is one of whatever the man page is documenting: a Tcl command
or subcommand, a C function, a program.<p>

The <i>tag</i> is a short
string which identifies the item, such as a command's name; it should
be unique within the manpage.<p>

The <i>text</i> is the text that's
actually displayed in the man page; it usually includes more
information, such as the command's full signature.  It may contain
embedded style macros.<p>

The <iref defitem> macro is followed by the documentation for the
item. For example,<p>

<example>
<lb>defitem mycommand {mycommand <i>value</i> ?<i>optionalValue</i>?}<rb>

This command does nothing in particular, being merely a pedagogical
example.<lb>p<rb>;
</example>

Note that the <i>tag</i> won't necessarily be same as the first token
in the <i>text</i>; when documenting subcommands of a Tcl object, for
example, the object usually appears as a variable reference in the
first spot:<p>

<example>
<lb>defitem mysubcommand {$object mysubcommand <lb>i value<rb>}<rb>
</example>

Each of the macro definitions in this section is produced by
<iref defitem>.<p>

<defitem defopt {<lb>defopt <i text><rb>}>

Programs often have options; Tcl commands and objects often have
options as well.  When <iref defopt> appears in a definition list,
it defines an option belonging to the item defined by the immediately
preceding <iref defitem>.  It's assumed that the option is the first
token in <i>text</i>, which may contain embedded style macros.  
For example,<p>

<example>
<lb>deflist commands<rb>
    . . .
<lb>defitem mycommand {mycommand ?<lb>i options...<rb>?}<rb>

This command has the following options:&lt;p&gt;

<lb>deflist mycommand options<rb>

<lb>defopt {-this <lb>i value<rb>}<rb>

Description of the the option...
    . . .
<lb>/deflist mycommand options<rb>
. . .

<lb>/deflist commands<rb>
</example>

<defitem itemlist {<lb>itemlist<rb>}>

This macro expands to a list of the items defined in this manpage.
It's usually used in the "SYNOPSIS" section of the man page, as shown
in the <xref "MAN PAGE SKELETON">.  The list of macros in the
<xref SYNOPSIS> section of this man page was produced by
<iref itemlist>.<p>

If an item has options defined with <iref defopt>, they will appear,
slightly indented, just below the item in the <iref itemlist>.<p>

<defitem iref {<lb>iref <i>item...</i><rb>}>

The name "iref" stands for "item reference"; this macro creates a
hyperlink to the definition of <i>item</i> in the same man page.
For example,<p>

<example>
<lb>iref defitem<rb>
</example>

expands to a link to <iref defitem>.<p>

If the item name has multiple tokens, there is no need to quote them;
<iref iref>'s arguments are accumulated into a single item name.<p>

<defitem itag {<lb>itag <i name><rb>}>

This is simply an <itag iref> to macro <i name>; it creates a hyperlink
in typewriter font with angle brackets.<p> 

<defitem tclsh {<lb>tclsh script<rb>}>

Executes the script in a Tcl interpreter, and returns the result.  The
precise interpreter is determined by the <tt -tclshcmd> passed to 
<xref manpage(n) "manpage(n)'s format subcommand">.  This is used by 
Kite to allow man pages to execute code in the context of the project's
code base, thus allowing automatic documentation generation.<p>

<defitem version {<lb>version<rb>}>

Returns the project version number, as provided to 
<xref manpage(n)>'s <xref manpage(n) format> subcommand.<p>

<defitem mktree {<lb>mktree<rb>}>

If included anywhere in the man page, this macro enables use of the
"mktree" Javascript package for turning nested lists of links into
dynamic lists that can be opened and closed.  In particular, the
Javascript code and the necessary CSS styles are included in the HTML
output.<p>

TBD: Add info on how to enable this for a particular tree!<p>

</deflist macros>

<section "MAN PAGE SKELETON">

The sections included in a man page depend on just what you're
documenting.  That said, here's a fairly typical skeleton:<p>

<example>
<lb>manpage somelib(n)<rb>

<lb>section SYNOPSIS<rb>

Put how to load this library here.  Then, put the itemlist:&lt;p&gt;

<lb>itemlist<rb>

<lb>section DESCRIPTION<rb>

A general description of the package.&lt;p&gt;

<lb>section COMMANDS<rb>

If this were a C library, this might be "FUNCTIONS" instead.&lt;p&gt;

<lb>deflist commands<rb>
     .
     .
     .
<lb>/deflist commands<rb>

<lb>section EXAMPLES<rb>

Put examples here, assuming they didn't fit better under one of the
items listed above.&lt;p&gt;

<lb>section AUTHOR<rb>

Your name.&lt;p&gt;

<lb>section HISTORY<rb>

Any relevant historical information, like "This package was developed
as a replacement for <lb>xref soandsolib(n)<rb>...."&lt;p&gt;

<lb>/manpage<rb>
</example>

<section AUTHOR>

Will Duquette<p>

<section HISTORY>

Originally written for JNEM as jnem_man(5); migrated to Mars in
September 2008 as app_man(5), and moved to Kite in July 2014.<p>

</manpage>







