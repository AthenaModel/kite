# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    misc.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    Tcltest test suite for kiteapp(n) misc.tcl
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n)

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2.2 
    eval ::tcltest::configure $argv
}

# Import tcltest(n)
namespace import ::tcltest::*

 
#-----------------------------------------------------------------------
# Load the package to be tested

source ../../lib/kiteapp/pkgModules.tcl

#-------------------------------------------------------------------
# Setup

# pprint command....
#
# command... - A Tcl command
#
# Calls the command in the caller's context, and gets the output;
# and adds whitespace to pretty print the result.

proc pprint {args} {
    set result [uplevel 1 $args]
    return "\n$result\n"
}

# cleanup
#
# Cleans up after all tests.

proc cleanup {} {
    set ::kiteapp::verbose 0
}


#-------------------------------------------------------------------
# vputs

test vputs-1.1 {Creates no output by default} -body {
    vputs "some text"
} -cleanup {
    cleanup
} -output {}

test vputs-1.2 {Creates output when verbose is enabled} -setup {
    set ::kiteapp::verbose 1
} -body {
    vputs "some text"
} -cleanup {
    cleanup
} -output "some text\n"

test vputs-1.3 {Joins multiple strings} -setup {
    set ::kiteapp::verbose 1
} -body {
    vputs "some text" "some more text" "even more text"
} -cleanup {
    cleanup
} -output "some text some more text even more text\n"

#-------------------------------------------------------------------
# blockreplace

test blockreplace-1.1 {no tag found} -body {
    pprint blockreplace [outdent {
        before
        # -kite-start-other DO NOT EDIT BY HAND
        foo
        # -kite-end-other
        after
    }] mytag "fred"
} -result {
before
# -kite-start-other DO NOT EDIT BY HAND
foo
# -kite-end-other
after
}

test blockreplace-1.2 {tag found} -body {
    pprint blockreplace [outdent {
        before
        # -kite-mytag-start DO NOT EDIT BY HAND
        foo
        # -kite-mytag-end
        after
    }] mytag "fred"
} -result {
before
# -kite-mytag-start DO NOT EDIT BY HAND
fred
# -kite-mytag-end
after
}

#-------------------------------------------------------------------
# prepare

test prepare-1.1 {trims var} -body {
    set parm "  my value  "
    prepare parm
    set parm
} -result {my value}

test prepare-1.2 {-tolower} -body {
    set parm "My Value"
    prepare parm -tolower
    set parm
} -result {my value}

test prepare-1.3 {-toupper} -body {
    set parm "My Value"
    prepare parm -toupper
    set parm
} -result {MY VALUE}

test prepare-1.3 {-required, success} -body {
    set parm "My Value"
    prepare parm -required
} -result {}

test prepare-2.1 {error, unknown option} -body {
    set parm "My Value"
    prepare parm -nonesuch
} -returnCodes {
    error
} -result {Unknown option: "-nonesuch"}

test prepare-2.2 {error, -required but empty} -body {
    set parm ""
    prepare parm -required
} -returnCodes {
    error
} -result {Missing parm value}



#-------------------------------------------------------------------
# Cleanup

cleanupTests








